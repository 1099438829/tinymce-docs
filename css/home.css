html {
  box-sizing: border-box; }

*,
*::after,
*::before {
  box-sizing: inherit; }

body {
  color: #828282;
  text-align: center; }

.polygons {
  background-image: url("../images/bg-polygons.svg"), linear-gradient(to bottom, #1173D3, #4AC36C);
  background-position: 50%;
  background-size: cover; }

section {
  padding: 45px 25px 50px;
  background-position: 50%;
  background-size: cover;
  display: block; }
  section::after {
    clear: both;
    content: "";
    display: table; }
  section .icon {
    display: inline-block;
    margin-bottom: 5px; }
  section h3 {
    margin-bottom: 14px; }
  section h4 {
    margin-bottom: 20px; }
    @media screen and (min-width: 0) and (max-width: 768px) {
      section h4 br {
        display: none; } }
  @media screen and (min-width: 0) and (max-width: 768px) {
    section button {
      display: block;
      width: 100% !important;
      margin-top: 5px; } }

header {
  color: white;
  padding-top: 113px;
  padding-bottom: 50px; }
  header h2 {
    margin-bottom: 50px; }
    @media screen and (min-width: 0) and (max-width: 768px) {
      header h2 {
        margin-bottom: 110px; } }
  header .demo {
    position: relative;
    margin: 0 auto -220px;
    width: 754px;
    height: 372px;
    box-shadow: 0px 2px 8px 0px rgba(0, 0, 0, 0.2);
    z-index: 10; }
    @media screen and (min-width: 0) and (max-width: 768px) {
      header .demo {
        display: none; } }

.download-top {
  position: relative;
  padding: 215px 25px 50px;
  background-color: #F1F1F1;
  z-index: 1; }
  @media screen and (min-width: 0) and (max-width: 768px) {
    .download-top {
      padding-top: 50px; } }

.news {
  border-top: 1px solid #DEDEDE;
  border-bottom: 1px solid #DEDEDE;
  padding: 0 25px; }
  @media screen and (min-width: 0) and (max-width: 768px) {
    .news {
      padding: 40px 25px; } }
  .news .row {
    max-width: 582px;
    margin-left: auto;
    margin-right: auto; }
    .news .row::after {
      clear: both;
      content: "";
      display: table; }
    .news .row > * {
      height: 80px;
      line-height: 80px; }
      @media screen and (min-width: 0) and (max-width: 768px) {
        .news .row > * {
          height: 40px;
          line-height: 40px; } }
    .news .row > div:first-child {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 14.70196%;
      text-align: center; }
      .news .row > div:first-child:last-child {
        margin-right: 0; }
      @media screen and (min-width: 0) and (max-width: 768px) {
        .news .row > div:first-child {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 100%; }
          .news .row > div:first-child:last-child {
            margin-right: 0; } }
    .news .row .badge {
      display: inline-block;
      padding: 7px 16px;
      width: 62px;
      border: 1px solid #DEDEDE;
      border-radius: 30px;
      font-size: 12px;
      line-height: 12px; }
    .news .row p {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 65.88078%;
      text-overflow: ellipsis;
      white-space: nowrap;
      overflow: hidden; }
      .news .row p:last-child {
        margin-right: 0; }
      @media screen and (min-width: 0) and (max-width: 768px) {
        .news .row p {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 100%; }
          .news .row p:last-child {
            margin-right: 0; } }
    .news .row a {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 14.70196%; }
      .news .row a:last-child {
        margin-right: 0; }
      @media screen and (min-width: 0) and (max-width: 768px) {
        .news .row a {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 100%; }
          .news .row a:last-child {
            margin-right: 0; } }

.quick-install .icon {
  width: 85px;
  height: 85px;
  background-image: url("../images/icn-cloud-gray@2x.png");
  background-size: 100%; }

.quick-install .gist {
  display: block;
  margin: 25px auto;
  max-width: 559px; }

.learn {
  background-image: url("../images/bg-learn@2x.png"); }
  .learn .icon {
    width: 85px;
    height: 85px;
    background-image: url("../images/icn-book-white@2x.png");
    background-size: 100%; }

.customization {
  max-width: 1100px;
  margin-left: auto;
  margin-right: auto; }
  .customization::after {
    clear: both;
    content: "";
    display: table; }
  .customization > div:nth-child(1) {
    margin-bottom: 50px; }
  .customization > div:nth-child(1) .icon {
    width: 85px;
    height: 85px;
    background-image: url("../images/icn-plugins-gray@2x.png");
    background-size: 100%; }
  .customization > div:nth-child(2) .icon {
    width: 85px;
    height: 85px;
    background-image: url("../images/icn-skin-gray@2x.png");
    background-size: 100%; }
  .customization > div {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 48.82117%; }
    .customization > div:last-child {
      margin-right: 0; }
    @media screen and (min-width: 0) and (max-width: 768px) {
      .customization > div {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 100%; }
        .customization > div:last-child {
          margin-right: 0; } }

.open-source {
  overflow: hidden;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  background-image: linear-gradient(to bottom, #2276D2, #1C5FA8); }
  .open-source .icon {
    position: relative;
    width: 85px;
    height: 85px;
    background-image: url("../images/icn-github-white@2x.png");
    background-size: 100%; }
  .open-source .radar {
    position: absolute;
    top: 50%;
    left: 50%;
    border-radius: 50%;
    border: 10px solid white;
    width: 150px;
    height: 150px;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    -webkit-animation: radar 2s infinite;
            animation: radar 2s infinite;
    opacity: 0; }
    .open-source .radar:nth-child(2) {
      -webkit-animation-delay: 0.2s;
              animation-delay: 0.2s; }
    .open-source .radar:nth-child(3) {
      -webkit-animation-delay: 0.5s;
              animation-delay: 0.5s; }

@-webkit-keyframes radar {
  0% {
    width: 150px;
    height: 150px;
    border: 40px solid white;
    opacity: 0; }
  50% {
    opacity: .1; }
  90% {
    width: 750px;
    height: 750px;
    border: 2px solid white;
    opacity: 0; }
  100% {
    width: 1500px;
    height: 1500px;
    border: 2px solid white;
    opacity: 0; } }

@keyframes radar {
  0% {
    width: 150px;
    height: 150px;
    border: 40px solid white;
    opacity: 0; }
  50% {
    opacity: .1; }
  90% {
    width: 750px;
    height: 750px;
    border: 2px solid white;
    opacity: 0; }
  100% {
    width: 1500px;
    height: 1500px;
    border: 2px solid white;
    opacity: 0; } }

.enterprise {
  max-width: 1100px;
  margin-left: auto;
  margin-right: auto; }
  .enterprise::after {
    clear: both;
    content: "";
    display: table; }
  .enterprise .enterprise-logos {
    margin: 20px 0;
    display: block; }
    .enterprise .enterprise-logos::after {
      clear: both;
      content: "";
      display: table; }
    .enterprise .enterprise-logos div {
      height: 145px;
      position: relative;
      border-right: 1px solid #ECEBEB;
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 23.23176%;
      margin-right: 0; }
      .enterprise .enterprise-logos div:last-child {
        margin-right: 0; }
      .enterprise .enterprise-logos div:nth-child(-n+4) {
        border-bottom: 1px solid #ECEBEB; }
      .enterprise .enterprise-logos div:nth-child(4n-4) {
        border-right: none; }
      @media screen and (min-width: 0) and (max-width: 768px) {
        .enterprise .enterprise-logos div {
          float: left;
          display: block;
          margin-right: 2.35765%;
          width: 100%;
          border-right: none; }
          .enterprise .enterprise-logos div:last-child {
            margin-right: 0; }
          .enterprise .enterprise-logos div:nth-child(-n+7) {
            border-bottom: 1px solid #ECEBEB; } }
      .enterprise .enterprise-logos div img {
        position: absolute;
        left: 50%;
        top: 50%;
        -webkit-transform: translate(-50%, -50%);
                transform: translate(-50%, -50%); }

.download-bottom {
  position: relative;
  padding: 120px 25px 120px; }
  .download-bottom .triangles {
    height: 482px; }
  .download-bottom h2 {
    margin-bottom: 15px; }
  .download-bottom .logo {
    margin-bottom: 32px;
    display: inline-block;
    width: 128px;
    height: 31px;
    background-image: url("../images/logo-tinymce-onblue@2x.png");
    background-size: 100%; }
  .download-bottom > * {
    z-index: 10;
    position: relative; }

/*# sourceMappingURL=data:application/json;base64, */
